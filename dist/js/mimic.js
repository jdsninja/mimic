(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
"use strict";

var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };

var config = _interopRequire(require("./config"));

global.Mimic = function () {
	// Mouse
	document.onmousemove = function (e) {
		console.log("x", e.pageX, ", y", e.pageY);
	};

	// Mouse Double click
	document.ondblclick = function (e) {
		console.log("doubleclick");
	};

	// Mouse Click
	document.onclick = function (e) {
		console.log("click");
	};
	var B = document.body,
	    H = document.documentElement,
	    height;

	if (typeof document.height !== "undefined") {
		height = document.height // For webkit browsers
		;
	} else {
		height = Math.max(B.scrollHeight, B.offsetHeight, H.clientHeight, H.scrollHeight, H.offsetHeight);
	}

	document.onscroll = function () {
		if (window.scrollY === 0) {
			console.log("page top");
		} else if (height === window.scrollY + H.clientHeight) {
			console.log("page bottom");
		} else {
			console.log("scrolling");
		}
	};

	// Keyboard
	document.onkeydown = function (event) {
		if (!event) {
			event = window.event; // need to double check what this does exactly
		}
		console.log(event.charCode, event.keyCode, String.fromCharCode(event.keyCode));
	};
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJvbWVkc291Y3kvU2l0ZXMvbWltaWMvc3JjL2pzL21pbWljLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0lBQU8sTUFBTSwyQkFBTSxVQUFVOztBQUU3QixNQUFNLENBQUMsS0FBSyxHQUFHLFlBQVk7O0FBRTFCLFNBQVEsQ0FBQyxXQUFXLEdBQUcsVUFBUyxDQUFDLEVBQUM7QUFDaEMsU0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0VBQ3pDLENBQUE7OztBQUdELFNBQVEsQ0FBQyxVQUFVLEdBQUcsVUFBUyxDQUFDLEVBQUM7QUFDL0IsU0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztFQUM1QixDQUFBOzs7QUFHRCxTQUFRLENBQUMsT0FBTyxHQUFHLFVBQVMsQ0FBQyxFQUFDO0FBQzVCLFNBQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7RUFDdEIsQ0FBQTtBQUNELEtBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxJQUFJO0tBQ2pCLENBQUMsR0FBRyxRQUFRLENBQUMsZUFBZTtLQUM1QixNQUFNLENBQUE7O0FBRVYsS0FBSSxPQUFPLFFBQVEsQ0FBQyxNQUFNLEtBQUssV0FBVyxFQUFFO0FBQzFDLFFBQU0sR0FBRyxRQUFRLENBQUMsTUFBTTtBQUFBLEdBQUE7RUFDekIsTUFBTTtBQUNMLFFBQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFFLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBRSxDQUFDO0VBQ3BHOztBQUVELFNBQVEsQ0FBQyxRQUFRLEdBQUcsWUFBVztBQUM3QixNQUFHLE1BQU0sQ0FBQyxPQUFPLEtBQUssQ0FBQyxFQUFDO0FBQ3RCLFVBQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7R0FDekIsTUFBSyxJQUFHLE1BQU0sS0FBSyxNQUFNLENBQUMsT0FBTyxHQUFJLENBQUMsQ0FBQyxZQUFZLEVBQUM7QUFDbkQsVUFBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztHQUM1QixNQUFJO0FBQ0gsVUFBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztHQUMxQjtFQUNGLENBQUM7OztBQUdGLFNBQVEsQ0FBQyxTQUFTLEdBQUcsVUFBUyxLQUFLLEVBQUU7QUFDbkMsTUFBSSxDQUFDLEtBQUssRUFBQztBQUNULFFBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO0dBQ3RCO0FBQ0QsU0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztFQUNoRixDQUFDO0NBQ0YsQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuL2NvbmZpZyc7XG5cbmdsb2JhbC5NaW1pYyA9IGZ1bmN0aW9uICgpIHtcblx0Ly8gTW91c2Vcblx0ZG9jdW1lbnQub25tb3VzZW1vdmUgPSBmdW5jdGlvbihlKXtcblx0ICBjb25zb2xlLmxvZygneCcsZS5wYWdlWCwgJywgeScsZS5wYWdlWSk7XG5cdH1cblxuXHQvLyBNb3VzZSBEb3VibGUgY2xpY2tcblx0ZG9jdW1lbnQub25kYmxjbGljayA9IGZ1bmN0aW9uKGUpe1xuXHQgIGNvbnNvbGUubG9nKCdkb3VibGVjbGljaycpO1xuXHR9XG5cblx0Ly8gTW91c2UgQ2xpY2tcblx0ZG9jdW1lbnQub25jbGljayA9IGZ1bmN0aW9uKGUpe1xuXHQgIGNvbnNvbGUubG9nKCdjbGljaycpO1xuXHR9XG5cdHZhciBCID0gZG9jdW1lbnQuYm9keSxcblx0ICAgIEggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG5cdCAgICBoZWlnaHRcblxuXHRpZiAodHlwZW9mIGRvY3VtZW50LmhlaWdodCAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0ICBoZWlnaHQgPSBkb2N1bWVudC5oZWlnaHQgLy8gRm9yIHdlYmtpdCBicm93c2Vyc1xuXHR9IGVsc2Uge1xuXHQgIGhlaWdodCA9IE1hdGgubWF4KCBCLnNjcm9sbEhlaWdodCwgQi5vZmZzZXRIZWlnaHQsSC5jbGllbnRIZWlnaHQsIEguc2Nyb2xsSGVpZ2h0LCBILm9mZnNldEhlaWdodCApO1xuXHR9XG5cblx0ZG9jdW1lbnQub25zY3JvbGwgPSBmdW5jdGlvbigpIHtcblx0ICBpZih3aW5kb3cuc2Nyb2xsWSA9PT0gMCl7XG5cdCAgICBjb25zb2xlLmxvZygncGFnZSB0b3AnKTtcblx0ICB9ZWxzZSBpZihoZWlnaHQgPT09IHdpbmRvdy5zY3JvbGxZICsgIEguY2xpZW50SGVpZ2h0KXtcblx0ICAgIGNvbnNvbGUubG9nKCdwYWdlIGJvdHRvbScpO1xuXHQgIH1lbHNle1xuXHQgICAgY29uc29sZS5sb2coJ3Njcm9sbGluZycpO1xuXHQgIH1cblx0fTtcblxuXHQvLyBLZXlib2FyZFxuXHRkb2N1bWVudC5vbmtleWRvd24gPSBmdW5jdGlvbihldmVudCkge1xuXHQgIGlmICghZXZlbnQpe1xuXHQgICAgZXZlbnQgPSB3aW5kb3cuZXZlbnQ7IC8vIG5lZWQgdG8gZG91YmxlIGNoZWNrIHdoYXQgdGhpcyBkb2VzIGV4YWN0bHlcblx0ICB9XG5cdCAgY29uc29sZS5sb2coZXZlbnQuY2hhckNvZGUsIGV2ZW50LmtleUNvZGUsIFN0cmluZy5mcm9tQ2hhckNvZGUoZXZlbnQua2V5Q29kZSkpO1xuXHR9O1xufTtcbiJdfQ==
},{"./config":2}],2:[function(require,module,exports){
"use strict";

var config = "test";
module.exports = config;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
